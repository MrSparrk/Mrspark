# -*- coding: utf-8 -*-
"""Copy of External data: Local Files, Drive, Sheets, and Cloud Storage

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DXxRk7A8JJ0ngQNP1aE2Mk5b8KGsCz-G

# THE SPARKS FOUNDATION(DATA SCIENCE AND BUSINESS ANALYTICS)
NAME= KISHAN P
TSF TASK 1: Prediction using Supervised ML (level-Beginner) 
To Predict Percentage Score Of Students Given The Number Of Hours Of Study Using Simple Linear Regression
"""

#Importing required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""Reading data from remote urf"""

url="http://bit.ly/w-data"
data=pd.read_csv(url)

"""Exploring data"""

print(data.shape)
data.head()

data.describe()

data.info()

data.plot(kind='scatter',x='Hours',y='Scores')
plt.show()

data.corr(method='pearson')

data.corr(method='spearman')

hours=data['Hours']
scores=data['Scores']

sns.distplot(hours)

sns.distplot(scores)

"""LINEAR REGRESSION"""

x = data.iloc[:, :-1].values
y = data.iloc[:, 1].values

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.2, random_state=50)

from sklearn.linear_model import LinearRegression
reg=LinearRegression()
reg.fit(x_train,y_train)

m=reg.coef_
c=reg.intercept_
line=m*x+c
plt.scatter(x,y)
plt.plot(x,line);
plt.show()

y_pred=reg.predict(x_test)

actual_predicted=pd.DataFrame({'Target':y_test,'Predicted':y_pred})
actual_predicted

sns.set_style('whitegrid')
sns.distplot(np.array(y_test-y_pred))
plt.show()

h=9.25
s=reg.predict([[h]])
print("If a student studies for {} % in exam.".format(h,s))

"""MODEL EVALUATION"""

from sklearn import metrics
from sklearn.metrics import r2_score 
print('Mean Absolute Error:',metrics.mean_absolute_error(y_test, y_pred))
print('R2 Score:',r2_score(y_test,y_pred))